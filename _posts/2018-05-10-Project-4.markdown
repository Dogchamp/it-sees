---
layout: post
date: 2018-05-10
---


Project 4
---

### Adversarial Networks
The goal of this project was to generate adversarial examples that could trick a networked pretrained to recognize
digits from the MNIST dataset.

In this example, we will be producing a 5, and try to get the network to think what we're giving it is an 8.
First we start with a randomly produced static image, and then calculate its gradient descent.
Then, we move opposite the gradient. We do this iteratively for a set amount of steps.

![Lined Up]({{ "/assets/project4/all lined up cropped.png" | absolute_url}})

Here is the output of the network. As we can see, the network thinks our adversarial 5 is an 8.
![Network Output]({{ "/assets/project4/network output cropped.png" | absolute_url}})

### Real World Applications
With privacy becoming a growing concern in the modern world, using adversarial networks as a means to fight against
face recognition could be very useful. 
While obviously one means would be to simply scramble all faces, some information could be lost during communications.
Therefore, using a GAN in order to preserve the original face/shape while still defending against recognition would be a 
handy tool to use in the real world.

### Conclusions
Of course, this application is probably too slow to run in real time, so a better solution would be needed.
